  (def digits ["zero" "one" "two" "three" "four" "five" "six" "seven" "eight" "nine"])
  (def sorted-digits (->> digits
                          (filter #(= (get % 1) \i))
                          reverse))
  (println "A backwards list of the digits with a second character of 'i':")
  (doall (map println sorted-digits))
  (def products products-list)
  (def order-groups (map #(hash-map :category (% 0), :products (% 1))
                          (group-by #(:category %) products)))
  (doall (map println order-groups))
  (def numbers-a [0 2 4 5 6 8 9])
  (def numbers-b [1 3 5 7 8])
  (def all-numbers (flatten [numbers-a numbers-b]))
  (println "All numbers from both arrays:")
  (println all-numbers)
  (doall (map println all-numbers))
  (println "All numbers from both arrays:")
  (doall (map println all-numbers))
